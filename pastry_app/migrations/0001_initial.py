# Generated by Django 4.2.6 on 2025-02-11 19:15

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):
    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Category",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "category_name",
                    models.CharField(
                        max_length=200, unique=True, verbose_name="Nom de la catégorie"
                    ),
                ),
                (
                    "category_type",
                    models.CharField(
                        choices=[
                            ("ingredient", "Ingrédient"),
                            ("recipe", "Recette"),
                            ("both", "Les deux"),
                        ],
                        default="both",
                        max_length=10,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name="Ingredient",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("ingredient_name", models.CharField(max_length=200, unique=True)),
                (
                    "categories",
                    models.ManyToManyField(
                        blank=True, related_name="ingredients", to="pastry_app.category"
                    ),
                ),
            ],
            options={
                "ordering": ["ingredient_name"],
            },
        ),
        migrations.CreateModel(
            name="Label",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "label_name",
                    models.CharField(
                        max_length=200, unique=True, verbose_name="Nom du label"
                    ),
                ),
                (
                    "label_type",
                    models.CharField(
                        choices=[
                            ("ingredient", "Ingrédient"),
                            ("recipe", "Recette"),
                            ("both", "Les deux"),
                        ],
                        default="both",
                        max_length=10,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name="Pan",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("pan_name", models.TextField(max_length=200, unique=True)),
                (
                    "pan_type",
                    models.CharField(
                        choices=[
                            ("ROUND", "Round"),
                            ("SQUARE", "Square"),
                            ("CUSTOM", "Custom"),
                        ],
                        max_length=200,
                    ),
                ),
            ],
            options={
                "ordering": ["pan_name"],
            },
        ),
        migrations.CreateModel(
            name="Recipe",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("recipe_name", models.TextField(max_length=200)),
                ("chef", models.CharField(max_length=200)),
                (
                    "recipe_type",
                    models.CharField(
                        choices=[
                            ("CAKE", "Gâteau"),
                            ("TART", "Tarte"),
                            ("ENTREMET", "Entremet"),
                            ("FLAN", "Flan"),
                            ("BREAD", "Pain"),
                            ("VIENNOISERIE", "Viennoiserie"),
                            ("BISCUIT", "Biscuit"),
                            ("CREMEUX", "Crémeux"),
                            ("CONFIT", "Confit/Coulis"),
                            ("GANACHE", "Ganache"),
                            ("MOUSSE", "Mousse/Ganache montée"),
                            ("OTHER", "Autre"),
                        ],
                        max_length=50,
                    ),
                ),
                (
                    "default_volume",
                    models.FloatField(
                        blank=True,
                        null=True,
                        validators=[django.core.validators.MinValueValidator(0)],
                    ),
                ),
                (
                    "default_servings",
                    models.IntegerField(
                        blank=True,
                        null=True,
                        validators=[django.core.validators.MinValueValidator(1)],
                    ),
                ),
                (
                    "avg_density",
                    models.FloatField(
                        blank=True,
                        null=True,
                        validators=[django.core.validators.MinValueValidator(0)],
                    ),
                ),
            ],
            options={
                "ordering": ["recipe_name", "chef"],
            },
        ),
        migrations.CreateModel(
            name="SubRecipe",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "quantity",
                    models.FloatField(
                        default=0,
                        validators=[django.core.validators.MinValueValidator(0.1)],
                    ),
                ),
                (
                    "recipe",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="recipe",
                        to="pastry_app.recipe",
                    ),
                ),
                (
                    "sub_recipe",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="subrecipe_set",
                        to="pastry_app.recipe",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="RecipeStep",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("step_number", models.IntegerField()),
                ("instruction", models.TextField()),
                ("trick", models.TextField(null=True)),
                (
                    "recipe",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="pastry_app.recipe",
                    ),
                ),
            ],
            options={
                "ordering": ["recipe", "step_number"],
            },
        ),
        migrations.CreateModel(
            name="RecipeIngredient",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "quantity",
                    models.FloatField(
                        default=0,
                        validators=[django.core.validators.MinValueValidator(0)],
                    ),
                ),
                (
                    "unit",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("g", "Grams"),
                            ("kg", "Kilograms"),
                            ("ml", "Milliliters"),
                            ("cl", "Centiliters"),
                            ("l", "Liters"),
                            ("tsp", "Teaspoons"),
                            ("tbsp", "Tablespoons"),
                            ("cas", "Cuillère à soupe"),
                            ("cc", "Cuillère à café"),
                            ("cup", "Cups"),
                            ("unit", "Unit"),
                        ],
                        max_length=50,
                        null=True,
                    ),
                ),
                (
                    "ingredient",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="pastry_app.ingredient",
                    ),
                ),
                (
                    "recipe",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="pastry_app.recipe",
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="recipe",
            name="ingredients",
            field=models.ManyToManyField(
                through="pastry_app.RecipeIngredient", to="pastry_app.ingredient"
            ),
        ),
        migrations.AddField(
            model_name="recipe",
            name="pan",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to="pastry_app.pan",
            ),
        ),
        migrations.CreateModel(
            name="IngredientPrice",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("brand", models.TextField(max_length=200, null=True)),
                ("store_name", models.TextField(max_length=200, null=True)),
                ("city", models.CharField(blank=True, max_length=100, null=True)),
                ("zip_code", models.CharField(blank=True, max_length=10, null=True)),
                (
                    "date",
                    models.DateField(
                        blank=True, default=django.utils.timezone.now, null=True
                    ),
                ),
                (
                    "quantity",
                    models.FloatField(
                        validators=[django.core.validators.MinValueValidator(0)]
                    ),
                ),
                (
                    "unit",
                    models.TextField(
                        choices=[
                            ("g", "Grams"),
                            ("kg", "Kilograms"),
                            ("ml", "Milliliters"),
                            ("cl", "Centiliters"),
                            ("l", "Liters"),
                            ("tsp", "Teaspoons"),
                            ("tbsp", "Tablespoons"),
                            ("cas", "Cuillère à soupe"),
                            ("cc", "Cuillère à café"),
                            ("cup", "Cups"),
                            ("unit", "Unit"),
                        ],
                        max_length=200,
                    ),
                ),
                (
                    "price",
                    models.FloatField(
                        validators=[django.core.validators.MinValueValidator(0)]
                    ),
                ),
                (
                    "ingredient",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="pastry_app.ingredient",
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="ingredient",
            name="labels",
            field=models.ManyToManyField(
                blank=True, related_name="ingredients", to="pastry_app.label"
            ),
        ),
        migrations.CreateModel(
            name="SquarePan",
            fields=[
                (
                    "pan_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="pastry_app.pan",
                    ),
                ),
                (
                    "length",
                    models.FloatField(
                        validators=[django.core.validators.MinValueValidator(0.1)]
                    ),
                ),
                (
                    "width",
                    models.FloatField(
                        validators=[django.core.validators.MinValueValidator(0.1)]
                    ),
                ),
                (
                    "height",
                    models.FloatField(
                        validators=[django.core.validators.MinValueValidator(0.1)]
                    ),
                ),
            ],
            options={
                "ordering": ["pan_ptr"],
                "unique_together": {("pan_ptr", "length", "width", "height")},
            },
            bases=("pastry_app.pan",),
        ),
        migrations.CreateModel(
            name="RoundPan",
            fields=[
                (
                    "pan_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="pastry_app.pan",
                    ),
                ),
                (
                    "diameter",
                    models.FloatField(
                        validators=[django.core.validators.MinValueValidator(0.1)]
                    ),
                ),
                (
                    "height",
                    models.FloatField(
                        validators=[django.core.validators.MinValueValidator(0.1)]
                    ),
                ),
            ],
            options={
                "ordering": ["pan_ptr"],
                "unique_together": {("pan_ptr", "diameter", "height")},
            },
            bases=("pastry_app.pan",),
        ),
        migrations.AlterUniqueTogether(
            name="recipe",
            unique_together={("recipe_name", "chef")},
        ),
        migrations.CreateModel(
            name="PanServing",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "servings_min",
                    models.IntegerField(
                        validators=[django.core.validators.MinValueValidator(1)]
                    ),
                ),
                (
                    "servings_max",
                    models.IntegerField(
                        validators=[django.core.validators.MinValueValidator(1)]
                    ),
                ),
                (
                    "recipe_type",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("CAKE", "Gâteau"),
                            ("TART", "Tarte"),
                            ("ENTREMET", "Entremet"),
                            ("FLAN", "Flan"),
                            ("BREAD", "Pain"),
                            ("VIENNOISERIE", "Viennoiserie"),
                            ("BISCUIT", "Biscuit"),
                            ("CREMEUX", "Crémeux"),
                            ("CONFIT", "Confit/Coulis"),
                            ("GANACHE", "Ganache"),
                            ("MOUSSE", "Mousse/Ganache montée"),
                            ("OTHER", "Autre"),
                        ],
                        max_length=50,
                        null=True,
                    ),
                ),
                (
                    "pan",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="pastry_app.pan"
                    ),
                ),
            ],
            options={
                "ordering": ["servings_min"],
                "unique_together": {("pan", "recipe_type")},
            },
        ),
        migrations.CreateModel(
            name="CustomPan",
            fields=[
                (
                    "pan_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="pastry_app.pan",
                    ),
                ),
                ("brand", models.CharField(blank=True, max_length=100, null=True)),
                (
                    "volume_raw",
                    models.FloatField(
                        validators=[django.core.validators.MinValueValidator(1)]
                    ),
                ),
                (
                    "unit",
                    models.CharField(
                        choices=[("cm3", "cm³"), ("L", "Litres")],
                        default="cm3",
                        max_length=3,
                    ),
                ),
            ],
            options={
                "ordering": ["brand", "pan_ptr"],
                "unique_together": {("pan_ptr", "brand")},
            },
            bases=("pastry_app.pan",),
        ),
    ]
